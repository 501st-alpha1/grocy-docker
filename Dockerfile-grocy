FROM alpine:3.11.5
LABEL maintainer "Talmai Oliveira <to@talm.ai>, James Addison <jay@jp-hosting.net>"

ARG GROCY_VERSION

# Optionally authenticate with GitHub using an API token
#
# This can reduce instances of download rate limiting by GitHub
# https://developer.github.com/v3/#rate-limiting
#
# This value is *not* assigned to a variable using the ENV instruction,
# since those variables are persisted in the resulting image and could leak
# developer credentials
# https://docs.docker.com/engine/reference/builder/#env
ARG GITHUB_API_TOKEN

# ensure www-data user exists
RUN set -eux; \
	addgroup -g 82 -S www-data; \
	adduser -u 82 -D -S -G www-data www-data
# 82 is the standard uid/gid for "www-data" in Alpine
# https://git.alpinelinux.org/aports/tree/main/apache2/apache2.pre-install?h=3.9-stable
# https://git.alpinelinux.org/aports/tree/main/lighttpd/lighttpd.pre-install?h=3.9-stable
# https://git.alpinelinux.org/aports/tree/main/nginx/nginx.pre-install?h=3.9-stable

# Install build-time dependencies
RUN     apk add --no-cache \
            composer \
            yarn \
            git \
            wget

# Install system dependencies
RUN     apk add --no-cache \
            php7-fpm \
            php7-fileinfo \
            php7-gd \
            php7-pdo_sqlite \
            php7-simplexml \
            php7-tokenizer && \
        mkdir -p /var/log/php7 && \
        chown -R www-data /var/log/php7 && \
        mkdir -p /var/www && \
        chown -R www-data /var/www

COPY docker_grocy/www.conf /etc/php7/php-fpm.d/zz-docker.conf

# Install application dependencies (unprivileged)
USER www-data
WORKDIR /var/www

# Extract application release package
RUN     set -o pipefail && \
        wget --header "Authorization: ${GITHUB_API_TOKEN}" -t 3 -T 30 -nv "https://github.com/grocy/grocy/archive/${GROCY_VERSION}.tar.gz" && \
        tar xzf "${GROCY_VERSION}.tar.gz" && \
        rm "${GROCY_VERSION}.tar.gz" && \
        mv grocy-*/* . && \
        rm -r grocy-* && \
        mkdir data/viewcache && \
        cp config-dist.php data/config.php

# Install application dependencies
RUN     COMPOSER_OAUTH=${GITHUB_API_TOKEN:+"\"github.com\": \"${GITHUB_API_TOKEN}\""} && \
        COMPOSER_AUTH="{\"github-oauth\": { ${COMPOSER_OAUTH} }}" composer install --no-interaction --no-dev --optimize-autoloader && \
        yarn install --modules-folder /var/www/public/node_modules --production && \
        yarn cache clean

# Remove build-time dependencies (privileged)
USER root
RUN     apk del \
            yarn \
            wget

VOLUME ["/var/www/data", "/var/www/public"]

EXPOSE 9000

USER www-data

ENTRYPOINT ["/usr/sbin/php-fpm7"]
