FROM php:7.2-fpm-alpine
LABEL maintainer="Talmai Oliveira <to@talm.ai>"

# Optionally authenticate with GitHub using an API token
#
# This can reduce instances of download rate limiting by GitHub
# https://developer.github.com/v3/#rate-limiting
#
# This value is *not* assigned to a variable using the ENV instruction,
# since those variables are persisted in the resulting image and could leak
# developer credentials
# https://docs.docker.com/engine/reference/builder/#env
ARG GITHUB_API_TOKEN

RUN     apk update && \
        apk add --no-cache \
            composer \
            yarn \
            git \
            python \
            py-pip \
            wget \
            freetype \
            libpng \
            libjpeg-turbo \
            freetype-dev \
            libpng-dev \
            libjpeg-turbo-dev && \
        docker-php-ext-configure gd \
            --with-gd \
            --with-freetype-dir=/usr/include/ \
            --with-png-dir=/usr/include/ \
            --with-jpeg-dir=/usr/include/ && \
        NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
        docker-php-ext-install -j${NPROC} gd && \
        mkdir -p /www && \
    # Set environments
        sed -i "s|;*daemonize\s*=\s*yes|daemonize = no|g" /usr/local/etc/php-fpm.conf && \
        sed -i "s|;*chdir\s*=\s*/var/www|chdir = /www|g" /usr/local/etc/php-fpm.d/www.conf && \
        pip install lastversion==0.2.4 && \
        wget --header "Authorization: ${GITHUB_API_TOKEN}" -t 3 -T 30 -nv -O "grocy.tar.gz" $(GITHUB_API_TOKEN=${GITHUB_API_TOKEN} lastversion --source grocy/grocy) && \
        tar xzf grocy.tar.gz && \
        rm -f grocy.tar.gz && \
        cd grocy-* && \
        mv public /www/public && \
        mv controllers /www/controllers && \
        mv data /www/data && \
        mv helpers /www/helpers && \
        mv localization/ /www/localization && \
        mv middleware/ /www/middleware && \
        mv migrations/ /www/migrations && \
        mv publication_assets/ /www/publication_assets && \
        mv services/ /www/services && \
        mv views/ /www/views && \
        mv composer.* /www/ && \
        mv .yarnrc /www/ && \
        mv *.php /www/ && \
        mv *.json /www/ && \
        mv *yarn* /www/ && \
        mv *.sh /www/


RUN cd /var/www/html && \
        COMPOSER_OAUTH=${GITHUB_API_TOKEN:+"\"github.com\": \"${GITHUB_API_TOKEN}\""} && \
        COMPOSER_AUTH="{\"github-oauth\": { ${COMPOSER_OAUTH} }}" composer install --no-interaction --no-dev --optimize-autoloader --working-dir=/www/ && \
        cp /www/config-dist.php /www/data/config.php && \
        cd /www && \
        yarn install --production && \
        mkdir /www/data/viewcache && \
        chown www-data:www-data -R /www/

# Set Workdir
WORKDIR /www/public

# Expose volumes
VOLUME ["/www"]

# Expose ports
EXPOSE 9000
